import * as antlr from "antlr4ng";
export declare class XPathLexer extends antlr.Lexer {
    static readonly TOKEN_REF = 1;
    static readonly RULE_REF = 2;
    static readonly ANYWHERE = 3;
    static readonly ROOT = 4;
    static readonly WILDCARD = 5;
    static readonly BANG = 6;
    static readonly ID = 7;
    static readonly STRING = 8;
    static readonly channelNames: string[];
    static readonly literalNames: (string | null)[];
    static readonly symbolicNames: (string | null)[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    constructor(input: antlr.CharStream);
    get grammarFileName(): string;
    get literalNames(): (string | null)[];
    get symbolicNames(): (string | null)[];
    get ruleNames(): string[];
    get serializedATN(): number[];
    get channelNames(): string[];
    get modeNames(): string[];
    action(localContext: antlr.ParserRuleContext | null, ruleIndex: number, actionIndex: number): void;
    private ID_action;
    static readonly _serializedATN: number[];
    private static __ATN;
    static get _ATN(): antlr.ATN;
    private static readonly vocabulary;
    get vocabulary(): antlr.Vocabulary;
    private static readonly decisionsToDFA;
}
